<?xml version="1.0"?>
<!-- 
    Single pipeline launch file
 -->
<launch>
    <arg name="launch_cruncher"         default="true"/>
    <arg name="launch_monitor"          default="true"/>
    <arg name="launch_plotter"          default="true"/>
    <arg name="launch_webserver"        default="true"/>
    <arg name="launch_throttle"         default="true"/>
    <arg name="launch_img_odom_agg"     default="true"/>
    <arg name="launch_paramwatcher"     default="true"/>
    <arg name="launch_visualiser"       default="true"/>
    <arg name="launch_twist2joy"        default="true"/>
    <arg name="launch_follower"         default="true"/>

    <arg name="offline"                 default="false"/>
    
    <arg name="main_rate"               default="12.0"/>
    <arg name="throttle_rate"           default="10.0"/>
    <arg name="anon"                    default="True"/>
    <arg name="reset"                   default="True"/>

    <arg name="namespace"               default="/vpr_nodes"/>

    <arg name="monitor_printprediction" default="False"/>

    <arg name="plotter_port"            default="5006"/>
    <arg name="plotter_address"         default="0.0.0.0"/>

    <arg name="tt_mode"                 default="1"/>
    <arg name="tt_img_dims"             default="(640,480)"/>

    <arg name="use_gpu"                 default="True"/>

    <arg name="tj_node_name"            default="twist2joy"/>
    <arg name="tj_anon"                 default="True"/>
    <arg name="tj_rate"                 default="50.0"/>

    <arg name="tj_twist_sub"            default="/twist2joy/in"/>
    <arg name="tj_twist_pub"            default="/jackal_velocity_controller/cmd_vel"/>
    <arg name="tj_joy_sub"              default="/bluetooth_teleop/joy"/>
    
    <arg name="fw_node_name"            default="follower"/>
    <arg name="fw_anon"                 default="True"/>
    <arg name="fw_rate"                 default="10.0"/>

    <arg name="log_level"               default="2"/> <!-- 1: Debug, 2: Info, 4: Warn, 8: Error, 16: Fatal -->

    <group if="$(arg offline)">
        <!-- Load in params; must be done outside of a namespace -->
        <rosparam command="load" file="$(find aarapsi_robot_pack)/cfg/pipeline_config.yaml"/>
    </group>
    
    <group ns="$(arg namespace)">
        

        <group if="$(arg offline)">
            
            <!-- Web Server Node: -->
            <node if="$(arg launch_webserver)" pkg="web_video_server" type="web_video_server" name="web_video_server" output="screen"/>

            <!-- Param Watcher Node: -->
            <node if="$(arg launch_paramwatcher)" pkg="aarapsi_robot_pack" type="param_watcher.py" name="param_watcher" output="screen"
                    args="-ID 0"/>

            <!-- Camera Topic Throttling Node: -->
            <node if="$(arg launch_throttle)" pkg="aarapsi_robot_pack" type="throttle.py" name="throttle" output="screen"
                    args="-N throttle -r $(arg throttle_rate) -a $(arg anon) -m $(arg tt_mode) -i $(arg tt_img_dims) -V $(arg log_level) -ID 1" />

            <!-- Image+Odom Aggregation Node: -->
            <node if="$(arg launch_img_odom_agg)" pkg="aarapsi_robot_pack" type="img_odom_agg.py" name="img_odom_agg"  output="screen"
                    args="-N img_odom_agg -r $(arg throttle_rate) -n $(arg namespace) -a $(arg anon) -V $(arg log_level) -R $(arg reset) -ID 2" />
        </group>

        <!-- Cruncher's Trainer Node: -->
        <node if="$(arg launch_cruncher)" pkg="aarapsi_robot_pack" type="dataset_trainer.py" name="dataset_trainer" output="screen" 
            args="-r $(arg main_rate) -N dataset_trainer -a $(arg anon) -n $(arg namespace) -R $(arg reset) -V $(arg log_level) -G $(arg use_gpu) -ID 3">
        </node>

        <!-- Cruncher Node: -->
        <node if="$(arg launch_cruncher)" pkg="aarapsi_robot_pack" type="vpr_cruncher.py" name="vpr_cruncher" output="screen" 
            args="-r $(arg main_rate) -N vpr_cruncher -a $(arg anon) -n $(arg namespace) -R $(arg reset) -V $(arg log_level) -ID 4">
        </node>

        <!-- Monitor's SVM Trainer Node: -->
        <node if="$(arg launch_monitor)" pkg="aarapsi_robot_pack" type="svm_trainer.py" name="svm_trainer" output="screen" 
            args="-r $(arg main_rate) -N svm_trainer -a $(arg anon) -n $(arg namespace) -R $(arg reset) -V $(arg log_level) -ID 5">
        </node>

        <!-- Monitor Node: -->
        <node if="$(arg launch_monitor)" pkg="aarapsi_robot_pack" type="vpr_monitor.py" name="vpr_monitor" output="screen" 
            args="-p $(arg monitor_printprediction) -r $(arg main_rate) -N vpr_monitor -a $(arg anon) -n $(arg namespace) -R $(arg reset) -V $(arg log_level) -ID 6">
        </node>

        <!-- Plotter Node: -->
        <node if="$(arg launch_plotter)" pkg="aarapsi_robot_pack" type="vpr_plotter.py" name="vpr_plotter" output="screen" 
            args="-P $(arg plotter_port) -A $(arg plotter_address) -r $(arg main_rate) -N vpr_plotter -a $(arg anon) -n $(arg namespace) -R $(arg reset) -V $(arg log_level) -ID 7">
        </node>

        <!-- Visualisation Node: -->
        <node if="$(arg launch_visualiser)" pkg="aarapsi_robot_pack" type="visualiser.py" name="visualiser" output="screen" 
            args="-r $(arg main_rate) -N visualiser -a $(arg anon) -n $(arg namespace) -R $(arg reset) -V $(arg log_level) -ID 8">
        </node>
    
        <!-- Twist2Joy Node: -->
        <node if="$(arg launch_twist2joy)" pkg="aarapsi_robot_pack" type="twist2joy.py" name="$(arg tj_node_name)" output="screen"
                args="$(arg tj_twist_sub) $(arg tj_twist_pub) $(arg tj_joy_sub) 
                -N $(arg tj_node_name) -r $(arg tj_rate) -a $(arg tj_anon) -V $(arg log_level) -ID 9"/>

        <!-- Follower Node: -->
        <node if="$(arg launch_follower)" pkg="aarapsi_robot_pack" type="follower.py" name="$(arg fw_node_name)" output="screen"
                args="-N $(arg fw_node_name) -r $(arg fw_rate) -a $(arg fw_anon) -V $(arg log_level) -ID 10"/>

    </group>

</launch>
