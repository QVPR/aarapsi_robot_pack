<?xml version="1.0"?>
<!-- 
    Single pipeline launch file
 -->
<launch>

    <arg name="launch_init"             default="true"/>
    <arg name="launch_webserver"        default="true"/>
    <arg name="launch_data_fuser"       default="true"/>
    <arg name="launch_paramwatcher"     default="true"/>
    
    <arg name="launch_cruncher"         default="true"/>
    <arg name="launch_monitor"          default="true"/>
    <arg name="launch_plotter"          default="true"/>

    <arg name="launch_visualiser"       default="true"/>

    <arg name="load_params"             default="false"/>
    
    <arg name="main_rate"               default="12.0"/>
    <arg name="init_rate"               default="15.0"/>
    <arg name="anon"                    default="True"/>
    <arg name="reset"                   default="True"/>

    <arg name="namespace"               default="/vpr_nodes"/>

    <arg name="plotter_port"            default="5006"/>
    <arg name="plotter_address"         default="0.0.0.0"/>

    <arg name="use_gpu"                 default="True"/>

    <arg name="log_level"               default="2"/>
    <arg name="param_file"              default="sim_cfg.yaml"/>

    <group if="$(arg load_params)">
        <!-- Load in params; must be done outside of a namespace -->
        <rosparam command="load" file="$(find aarapsi_robot_pack)/cfg/$(arg param_file)"/>
    </group>
    
    <group ns="$(arg namespace)">   
        <group if="$(arg launch_init)">         
            <!-- Web Server Node: -->
            <node if="$(arg launch_webserver)" pkg="web_video_server" type="web_video_server" name="web_video_server" output="screen"/>

            <!-- Param Watcher Node: -->
            <node if="$(arg launch_paramwatcher)" pkg="aarapsi_robot_pack" type="param_watcher.py" name="param_watcher" output="screen"
                args="
                        -r $(arg init_rate) -N param_watcher -n $(arg namespace) -a $(arg anon) 
                        -V $(arg log_level) -R $(arg reset) -ID 1"/>

            <!-- Data Fuser Node: -->
            <node if="$(arg launch_data_fuser)" pkg="aarapsi_robot_pack" type="data_fuser.py" name="data_fuser"  output="screen"
                    args="
                            -N data_fuser -r $(arg init_rate) -a $(arg anon)
                            -V $(arg log_level) -R $(arg reset) -ID 2" />
        </group>

        <!-- Cruncher's Trainer Node: -->
        <node if="$(arg launch_cruncher)" pkg="aarapsi_robot_pack" type="dataset_trainer.py" name="dataset_trainer" output="screen" 
            args="-G $(arg use_gpu) 
                    -r $(arg main_rate) -N dataset_trainer -a $(arg anon) -n $(arg namespace)
                    -V $(arg log_level) -R $(arg reset) -ID 3">
        </node>

        <!-- Cruncher Node: -->
        <node if="$(arg launch_cruncher)" pkg="aarapsi_robot_pack" type="vpr_cruncher.py" name="vpr_cruncher" output="screen" 
            args="
                    -r $(arg main_rate) -N vpr_cruncher -a $(arg anon) -n $(arg namespace) 
                    -V $(arg log_level) -R $(arg reset) -ID 4">
        </node>

        <!-- Monitor's SVM Trainer Node: -->
        <node if="$(arg launch_monitor)" pkg="aarapsi_robot_pack" type="svm_trainer.py" name="svm_trainer" output="screen" 
            args="
                    -r $(arg main_rate) -N svm_trainer -a $(arg anon) -n $(arg namespace) 
                    -V $(arg log_level) -R $(arg reset) -ID 5">
        </node>

        <!-- Monitor Node: -->
        <node if="$(arg launch_monitor)" pkg="aarapsi_robot_pack" type="vpr_monitor.py" name="vpr_monitor" output="screen" 
            args="
                    -r $(arg main_rate) -N vpr_monitor -a $(arg anon) -n $(arg namespace) 
                    -V $(arg log_level) -R $(arg reset) -ID 6">
        </node>

        <!-- Plotter Node: -->
        <node if="$(arg launch_plotter)" pkg="aarapsi_robot_pack" type="vpr_plotter.py" name="vpr_plotter" output="screen" 
            args="-P $(arg plotter_port) -A $(arg plotter_address) 
                    -r $(arg main_rate) -N vpr_plotter -a $(arg anon) -n $(arg namespace) 
                    -V $(arg log_level) -R $(arg reset) -ID 7">
        </node>

        <!-- Visualisation Node: -->
        <node if="$(arg launch_visualiser)" pkg="aarapsi_robot_pack" type="visualiser.py" name="visualiser" output="screen" 
            args="
                    -r $(arg main_rate) -N visualiser -a $(arg anon) -n $(arg namespace) 
                    -V $(arg log_level) -R $(arg reset) -ID 8">
        </node>

    </group>

</launch>
